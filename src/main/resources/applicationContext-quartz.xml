<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
 xmlns:p="http://www.springframework.org/schema/p"
 xsi:schemaLocation="http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
<!-- begin Name:wuqiwei Data:2013-4-19 4-19 定时调度 -->
 <!-- 第一步 创建一个工作 该方式必须继承extends QuartzJobBean， 但是该方式不受spring 事务的传播性管理，最好不用-->
 <!-- <bean id="updateWorkflowJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        给jobClass属性注入ServiceQuartz 
        <property name="jobClass" value="cn.believeus.system.quartz.ServiceQuartz"/>  
        给 ServiceQuartz 注入属性
        <property name="jobDataAsMap">  
            <map>  
                <entry key="jokeService">  
                    <ref bean="BowenJokeService"/>  
                </entry>  
            </map>  
        </property>  
    </bean>  -->
    <!-- 最好使用该方式，还可以这么配置定义自己的拦截方法 -->
       <bean id="serviceQuartz" class="cn.believeus.system.quartz.ServiceQuartz"/>
       <bean id="updateWorkflowJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	        <property name="targetObject" ref="serviceQuartz" />
	      <!--   这个是要拦截的方法 -->
	        <property name="targetMethod" value="executeInternal" />
	       <!--  将并发设置为false -->
	        <property name="concurrent" value="false" /> 
    </bean> 
   <!--第二步 设置这个任务的细节，每隔多长时间执行一次  --> 
   	 <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
       <property name="jobDetail" ref="updateWorkflowJob"/>
        <!--   工作执行的频率，以毫秒为单位运行,每十秒中监听索引的变化 -->
        <property name="repeatInterval" value="5000"/>
	</bean>
	<!-- 如果期望更详细的时间设置，可以使用如下配置方案 -->
	<!--  <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="updateWorkflowJob"/>
		  从左到右  由空格分隔的时间元素 
        秒 分(0-59) 时(0-23) 日(1-31) 月(1-12) 星期中的日期(1-7) 年
		<property name="cronExpression">
			<value>0 0/1 * * * ? </value>
		</property>
	</bean>  -->
	<!-- 启动工作-->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- 接受一组触发器-->
        <property name="triggers">
            <list>
                <ref bean="simpleTrigger"/>
            </list>
        </property>
	</bean>
</beans>
